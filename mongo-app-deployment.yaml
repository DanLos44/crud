kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongo-data-pv2
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/mongo-data

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-data-pvc2
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  selector:
    matchLabels:
      type: mongo-data-pv2

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mongo-app
  name: mongo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-app
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo-app
    spec:
      containers:
      - image: daniellosev/weather:mongoapp
        name: weather
        volumeMounts:
        - name: mongo-data
          mountPath: /app/logs
        resources: {}
      - image: daniellosev/weather:filebeat
        name: filebeat
        volumeMounts:
        - name: mongo-data
          mountPath: /app/logs
        resources: {}
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-data-pvc2
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo-app
  ports:
  - name: app-port
    port: 5000
    targetPort: 5000
  type: LoadBalancer







